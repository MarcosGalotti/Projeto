@import url(droparea.css);

input, textarea, select{
    appearance: none;
    width: 100%;
    border-radius: 0.5rem;
    border: 1px solid var(--stroke-default);

    padding: 0.75rem 1rem;

    font: var(--text);
}

label{
    font: var(--text-sm);
    color: var(--text-secondary);

    /* display block pra aceitar o margin bottom, sem o padrão é inline */
    display: block;
    margin-bottom: 0.25rem;
}

input:focus, 
textarea:focus, 
select:focus, 
input[type="date"]:focus-within{

    outline: 0.25rem solid var(--surface-secondary);
    border: 0.125rem solid var(--stroke-highlight);
    /* comando abaixo é somente para a bordar aparecer no navegador safari */
    outline-offset: 0.1px;
}

input[type='date'] {
    position: relative;

    /* comando para deixar o calendário padrão invisível */
    &::-webkit-calendar-picker-indicator{
        opacity: 0;
    }

    /* comandos para puxar a imagem do calendário personalizado e deixar centralizado a direita */
    &::before{
        content: "";
        position: absolute;
        background: url(../../assets/icons/calendar-03.svg) center/contain;
        right: 1rem;
        width: 1.25rem;
        height: 1.25rem;
        /* 50% top é para a imagem ficar na metade, porém a parte superior da imagem, assim, deve usar o transform translate Y para que seja da metade da imagem e não do topo */
        top: 50%;
        transform: translateY(-50%);
    }
}

select{
    /* Função calc é pra calcular, ajuda a posicionar o icone, -1rem é para ficar alinhado com o rigth 1rem do calendário
        Se colocasse apenas right ele ficaria no canto e teria que usar outros meios para alinhar na base do "chute"
    */
    background: url(../../assets/icons/arrow-down-01.svg) no-repeat calc(100% - 1rem);
}

.address > div{
    /* Pode ser feito como .address . flex 
        Ambos significa o caminho, o primeiro está pegando as div dentro do address, somente no primeiro nível, ou seja se tiver uma div dentro da div não se aplica.
        O segundo está pegando dentro do address que tenha uma classe flex aplicada
    */
    gap: 1.25rem;
}

.input-wrapper:has([disabled]){
    opacity: 0.5;
}

input{

    /* Comando para dizer se o input está desativado */
    &[disabled]{
        background-color: var(--surface-disabled);

        border: 1px solid var(--stroke-default);

        color: var(--text-primary);
    }

    /* Observa quando o campo está inválido */
    &:invalid {
        border: 0.125rem solid var(--semantic-error);
    }

    /* comando para pegar um input que tenha um small perto para aplicar no small*/
    & + small {
        font: var(--text-sm);
        color: #78716C;

        /* display com block para conseguir colocar o margin */
        display: inline-block;
        margin-top: 0.25rem;
    }

    /* Comando está falando, no input que tiver elemento required com uma classe error do lado irá aplicar o escolhido na classe error */
    &[required] + .error{
        display: flex;
        align-items: center;
        gap: 0.25rem;

        font: var(--text-sm);
        color: var(--semantic-error);

        margin-top: 0.25rem;
    }

    /* Para omitir a mensagem de erro. Comando está dizendo se um campo válido tiver ao lado uma classe error aplique o escolhido */
    &:valid + .error{
        display: none;
    }
}

